{
    "Camera.CameraClear": "指定した時間後にカメラを終了します",
    "Camera.CameraClear|param|time": "カメラを終了するまでの時間（秒）",
    "Camera.Pos": "カメラを指定した位置に移動します",
    "Camera.Pos|param|pos": "カメラの移動先座標",
    "Camera.FacingEntity": "カメラを指定した位置に移動し、エンティティを向きます",
    "Camera.FacingEntity|param|pos": "カメラの移動先座標",
    "Camera.FacingEntity|param|facing": "向く対象のエンティティ",
    "Camera.FacingPosition": "カメラを指定した位置に移動し、指定した座標を向きます",
    "Camera.FacingPosition|param|pos": "カメラの移動先座標",
    "Camera.FacingPosition|param|facing": "向く対象の座標",
    "Camera.Rot": "カメラを指定した位置に移動し、角度を設定します",
    "Camera.Rot|param|pos": "カメラの移動先座標",
    "Camera.Rot|param|xRot": "上下の回転角度（-90～90度）",
    "Camera.Rot|param|yRot": "左右の回転角度（-180～180度）",
    "Camera.EasePosition": "カメラをスムーズに移動させ、指定した座標を向きます",
    "Camera.EasePosition|param|pos": "カメラの移動先座標",
    "Camera.EasePosition|param|facing": "向く対象の座標",
    "Camera.EasePosition|param|easeType": "動きのスタイル（イージングタイプ）",
    "Camera.EasePosition|param|easeTime": "移動にかかる時間（秒）",
    "Camera.EasePosition|param|isClear": "移動完了後にカメラを終了するかどうか",
    "Camera.EasePosition|param|isPause": "移動中に実行を停止するかどうか",
    "Camera.EaseEntity": "カメラをスムーズに移動させ、エンティティを追跡します",
    "Camera.EaseEntity|param|pos": "カメラの移動先座標",
    "Camera.EaseEntity|param|facing": "追跡する対象のエンティティ",
    "Camera.EaseEntity|param|easeType": "動きのスタイル（イージングタイプ）",
    "Camera.EaseEntity|param|easeTime": "移動にかかる時間（秒）",
    "Camera.EaseEntity|param|isClear": "移動完了後にカメラを終了するかどうか",
    "Camera.EaseEntity|param|isPause": "移動中に実行を停止するかどうか",
    "Camera.EaseRot": "カメラをスムーズに移動させ、角度を回転します",
    "Camera.EaseRot|param|pos": "カメラの移動先座標",
    "Camera.EaseRot|param|xRot": "上下の回転角度（-90～90度）",
    "Camera.EaseRot|param|yRot": "左右の回転角度（-180～180度）",
    "Camera.EaseRot|param|easeType": "動きのスタイル（イージングタイプ）",
    "Camera.EaseRot|param|easeTime": "移動にかかる時間（秒）",
    "Camera.EaseRot|param|isClear": "移動完了後にカメラを終了するかどうか",
    "Camera.EaseRot|param|isPause": "移動中に実行を停止するかどうか",
    "Camera.fadeTime": "画面エフェクト（フェード）を実行します",
    "Camera.fadeTime|param|fadeInSeconds": "だんだん暗くなる時間（秒）",
    "Camera.fadeTime|param|holdSeconds": "暗い状態を維持する時間（秒）",
    "Camera.fadeTime|param|fadeOutSeconds": "だんだん明るくなる時間（秒）",
    "Camera.fadeTime|param|colorCode": "フェードする色",
    "Camera.fadeTime|param|isClear": "エフェクト完了後にカメラを終了するかどうか",
    "Camera.rgb": "RGB値から色を作成します",
    "Camera.rgb|param|red": "赤の値（0～255）",
    "Camera.rgb|param|green": "緑の値（0～255）",
    "Camera.rgb|param|blue": "青の値（0～255）",
    "Camera.setcolors": "指定した色を設定します",
    "Camera.setcolors|param|color": "設定する色",
    "Camera.FirstPersonView": "一人称視点に切り替えます",
    "Camera.ThirdPersonView": "三人称視点に切り替えます",
    "Camera.FrontView": "前面視点に切り替えます",
    "Camera.SetMovement": "プレイヤーの移動を有効/無効にします",
    "Camera.SetMovement|param|enabled": "移動を有効にするかどうか",
    "Camera.SetCameraControl": "カメラ操作を有効/無効にします",
    "Camera.SetCameraControl|param|enabled": "カメラ操作を有効にするかどうか",
    "agent.inspectNumericBlock": "指定した方向に存在する数値ブロックを調査し、数値を返します。",
    "agent.inspectNumericBlock|param|direction": "調査する方向。たとえば：SixDirection.Forward",
    "positions.RotateCoordinate": "指定された原点、軸、角度で座標を回転させます",
    "positions.RotateCoordinate|param|targetCoordinates": "回転させる座標",
    "positions.RotateCoordinate|param|origin": "回転の中心となるワールド座標",
    "positions.RotateCoordinate|param|axisOfRevolution": "回転軸の方向",
    "positions.RotateCoordinate|param|angle": "回転角度（0～360度）",
    "shapes.PlaceVariableBezierCurve": "可変数の制御点を使用してベジェ曲線に沿ってブロックを配置します。",
    "shapes.PlaceVariableBezierCurve|param|startPoint": "曲線の開始位置",
    "shapes.PlaceVariableBezierCurve|param|controlPoints": "曲線の形状に影響する制御点の配列",
    "shapes.PlaceVariableBezierCurve|param|endPoint": "曲線の終了位置",
    "shapes.PlaceVariableBezierCurve|param|block": "配置するブロックの種類",
    "shapes.createCylinder": "円柱（シリンダー）を作成してブロックを配置します",
    "shapes.createCylinder|param|center": "円柱の底面の中心位置",
    "shapes.createCylinder|param|radius": "円柱の半径",
    "shapes.createCylinder|param|height": "円柱の高さ",
    "shapes.createCylinder|param|block": "配置するブロックの種類",
    "shapes.createCylinder|param|hollow": "中空の円柱を作成するかどうか（デフォルト：false）",
    "shapes.createCone": "円錐（コーン）を作成してブロックを配置します",
    "shapes.createCone|param|center": "円錐の底面の中心位置",
    "shapes.createCone|param|radius": "円錐の底面の半径",
    "shapes.createCone|param|height": "円錐の高さ",
    "shapes.createCone|param|block": "配置するブロックの種類",
    "shapes.createCone|param|hollow": "中空の円錐を作成するかどうか（デフォルト：false）",
    "shapes.createTorus": "トーラス（ドーナツ型）を作成してブロックを配置します",
    "shapes.createTorus|param|center": "トーラスの中心位置",
    "shapes.createTorus|param|majorRadius": "主半径（中心から管の中心までの距離）",
    "shapes.createTorus|param|minorRadius": "副半径（管の太さ）",
    "shapes.createTorus|param|block": "配置するブロックの種類",
    "shapes.createTorus|param|hollow": "中空のトーラスを作成するかどうか（デフォルト：false）",
    "shapes.createEllipsoid": "楕円体を作成してブロックを配置します",
    "shapes.createEllipsoid|param|center": "楕円体の中心位置",
    "shapes.createEllipsoid|param|radiusX": "X軸方向の半径",
    "shapes.createEllipsoid|param|radiusY": "Y軸方向の半径",
    "shapes.createEllipsoid|param|radiusZ": "Z軸方向の半径",
    "shapes.createEllipsoid|param|block": "配置するブロックの種類",
    "shapes.createEllipsoid|param|hollow": "中空の楕円体を作成するかどうか（デフォルト：false）",
    "shapes.createHelix": "螺旋（らせん）を作成してブロックを配置します",
    "shapes.createHelix|param|center": "螺旋の底面中心位置",
    "shapes.createHelix|param|radius": "螺旋の半径",
    "shapes.createHelix|param|height": "螺旋の総高さ",
    "shapes.createHelix|param|turns": "完全回転数（0.5〜20回転）",
    "shapes.createHelix|param|block": "配置するブロックの種類",
    "shapes.createHelix|param|clockwise": "時計回りに回転するかどうか（デフォルト：true）",
    "shapes.createParaboloid": "パラボロイド（衛星皿型）を作成してブロックを配置します",
    "shapes.createParaboloid|param|center": "パラボロイドの底面中心位置",
    "shapes.createParaboloid|param|radius": "パラボロイドの最大半径",
    "shapes.createParaboloid|param|height": "パラボロイドの高さ",
    "shapes.createParaboloid|param|block": "配置するブロックの種類",
    "shapes.createParaboloid|param|hollow": "中空のパラボロイドを作成するかどうか（デフォルト：false）",
    "shapes.createHyperboloid": "双曲面（冷却塔型）を作成してブロックを配置します",
    "shapes.createHyperboloid|param|center": "双曲面の中心位置",
    "shapes.createHyperboloid|param|baseRadius": "底面の半径",
    "shapes.createHyperboloid|param|waistRadius": "くびれ部分の半径",
    "shapes.createHyperboloid|param|height": "双曲面の総高さ",
    "shapes.createHyperboloid|param|block": "配置するブロックの種類",
    "shapes.createHyperboloid|param|hollow": "中空の双曲面を作成するかどうか（デフォルト：false）",
    "shapes.createLine": "2つの点の間に線を描いてブロックを配置します",
    "shapes.createLine|param|p0": "線の開始位置",
    "shapes.createLine|param|p1": "線の終了位置",
    "shapes.createLine|param|block": "配置するブロックの種類",
    "shapes.createCircle": "円を作成してブロックを配置します",
    "shapes.createCircle|param|center": "円の中心位置",
    "shapes.createCircle|param|radius": "円の半径（1-50ブロック）",
    "shapes.createCircle|param|orientation": "円の向き（X、Y、またはZ軸）",
    "shapes.createCircle|param|block": "配置するブロックの種類",
    "shapes.createCircle|param|hollow": "中空の円を作成するかどうか（輪郭のみ）",
    "shapes.createSphere": "最適化アルゴリズムを使用して球を作成しブロックを配置します",
    "shapes.createSphere|param|center": "球の中心位置",
    "shapes.createSphere|param|radius": "球の半径（1-50ブロック）",
    "shapes.createSphere|param|block": "配置するブロックの種類",
    "shapes.createSphere|param|hollow": "中空の球を作成するかどうか（表面のみ）",
    "shapes.createSphere|param|density": "位置サンプリングの密度係数（0.1-1.0、デフォルト：1.0）",
    "shapes.createCuboid": "直方体（立方体）を作成してブロックを配置します",
    "shapes.createCuboid|param|corner1": "直方体の最初の角の位置",
    "shapes.createCuboid|param|corner2": "直方体の対角の角の位置",
    "shapes.createCuboid|param|block": "配置するブロックの種類",
    "shapes.createCuboid|param|hollow": "中空の直方体を作成するかどうか（表面のみ）",
    "coordinates.getVariableBezierCurvePositions": "可変数の制御点を使用したベジェ曲線の座標配列を計算します",
    "coordinates.getVariableBezierCurvePositions|param|startPoint": "曲線の開始位置",
    "coordinates.getVariableBezierCurvePositions|param|controlPoints": "曲線の形状に影響する制御点の配列",
    "coordinates.getVariableBezierCurvePositions|param|endPoint": "曲線の終了位置",
    "coordinates.getCylinderPositions": "円柱（シリンダー）の座標配列を計算します",
    "coordinates.getCylinderPositions|param|center": "円柱の底面の中心位置",
    "coordinates.getCylinderPositions|param|radius": "円柱の半径",
    "coordinates.getCylinderPositions|param|height": "円柱の高さ",
    "coordinates.getCylinderPositions|param|hollow": "中空の円柱を作成するかどうか（デフォルト：false）",
    "coordinates.getCylinderPositions|param|layers": "生成する層数の上限（0=全層、デフォルト：0）",
    "coordinates.getConePositions": "円錐（コーン）の座標配列を計算します",
    "coordinates.getConePositions|param|center": "円錐の底面の中心位置",
    "coordinates.getConePositions|param|radius": "円錐の底面の半径",
    "coordinates.getConePositions|param|height": "円錐の高さ",
    "coordinates.getConePositions|param|hollow": "中空の円錐を作成するかどうか（デフォルト：false）",
    "coordinates.getTorusPositions": "トーラス（ドーナツ型）の座標配列を計算します",
    "coordinates.getTorusPositions|param|center": "トーラスの中心位置",
    "coordinates.getTorusPositions|param|majorRadius": "主半径（中心から管の中心までの距離）",
    "coordinates.getTorusPositions|param|minorRadius": "副半径（管の太さ）",
    "coordinates.getTorusPositions|param|hollow": "中空のトーラスを作成するかどうか（デフォルト：false）",
    "coordinates.getEllipsoidPositions": "楕円体の座標配列を計算します",
    "coordinates.getEllipsoidPositions|param|center": "楕円体の中心位置",
    "coordinates.getEllipsoidPositions|param|radiusX": "X軸方向の半径",
    "coordinates.getEllipsoidPositions|param|radiusY": "Y軸方向の半径",
    "coordinates.getEllipsoidPositions|param|radiusZ": "Z軸方向の半径",
    "coordinates.getEllipsoidPositions|param|hollow": "中空の楕円体を作成するかどうか（デフォルト：false）",
    "coordinates.getHelixPositions": "螺旋（らせん）の座標配列を計算します",
    "coordinates.getHelixPositions|param|center": "螺旋の底面中心位置",
    "coordinates.getHelixPositions|param|radius": "螺旋の半径",
    "coordinates.getHelixPositions|param|height": "螺旋の総高さ",
    "coordinates.getHelixPositions|param|turns": "完全回転数（0.5〜20回転）",
    "coordinates.getHelixPositions|param|clockwise": "時計回りに回転するかどうか（デフォルト：true）",
    "coordinates.getParaboloidPositions": "パラボロイド（衛星皿型）の座標配列を計算します",
    "coordinates.getParaboloidPositions|param|center": "パラボロイドの底面中心位置",
    "coordinates.getParaboloidPositions|param|radius": "パラボロイドの最大半径",
    "coordinates.getParaboloidPositions|param|height": "パラボロイドの高さ",
    "coordinates.getParaboloidPositions|param|hollow": "中空のパラボロイドを作成するかどうか（デフォルト：false）",
    "coordinates.getHyperboloidPositions": "双曲面（冷却塔型）の座標配列を計算します",
    "coordinates.getHyperboloidPositions|param|center": "双曲面の中心位置",
    "coordinates.getHyperboloidPositions|param|baseRadius": "底面の半径",
    "coordinates.getHyperboloidPositions|param|waistRadius": "くびれ部分の半径",
    "coordinates.getHyperboloidPositions|param|height": "双曲面の総高さ",
    "coordinates.getHyperboloidPositions|param|hollow": "中空の双曲面を作成するかどうか（デフォルト：false）",
    "coordinates.getLinePositions": "3Dブレゼンハムアルゴリズムを使用して2点間の線の座標配列を計算します",
    "coordinates.getLinePositions|param|p0": "線の開始位置",
    "coordinates.getLinePositions|param|p1": "線の終了位置",
    "coordinates.getCirclePositions": "円の座標配列を計算します",
    "coordinates.getCirclePositions|param|center": "円の中心位置",
    "coordinates.getCirclePositions|param|radius": "円の半径",
    "coordinates.getCirclePositions|param|orientation": "円の向き（X、Y、Z軸）",
    "coordinates.getCirclePositions|param|hollow": "中空の円（輪郭のみ）を作成するかどうか",
    "coordinates.getSpherePositions": "球の座標配列を計算します",
    "coordinates.getSpherePositions|param|center": "球の中心位置",
    "coordinates.getSpherePositions|param|radius": "球の半径",
    "coordinates.getSpherePositions|param|hollow": "中空の球（殻のみ）を作成するかどうか",
    "coordinates.getSpherePositions|param|density": "位置サンプリングの密度係数（0.1-1.0、デフォルト：1.0）",
    "coordinates.getCuboidPositions": "直方体（立方体）の座標配列を計算します",
    "coordinates.getCuboidPositions|param|corner1": "直方体の最初の角の位置",
    "coordinates.getCuboidPositions|param|corner2": "直方体の対角の角の位置",
    "coordinates.getCuboidPositions|param|hollow": "中空の直方体（殻のみ）を作成するかどうか",
    "coordinates.optimizedFill": "座標配列を自動的に矩形領域に分解して最適化ブロック配置を行います",
    "coordinates.optimizedFill|param|positions": "配置する座標の配列",
    "coordinates.optimizedFill|param|block": "配置するブロックの種類",
    "coordinates.normalizeCoordinate": "座標を整数化し、有効範囲内にクランプします",
    "coordinates.normalizeCoordinate|param|coord": "正規化する座標値",
    "coordinates.validateCoordinates": "座標がMinecraft世界境界内にあるかチェックします",
    "coordinates.validateCoordinates|param|x": "X座標",
    "coordinates.validateCoordinates|param|y": "Y座標",
    "coordinates.validateCoordinates|param|z": "Z座標",
    "coordinates.safeWorld": "検証済みの安全な座標でPositionを作成します",
    "coordinates.safeWorld|param|x": "X座標",
    "coordinates.safeWorld|param|y": "Y座標",
    "coordinates.safeWorld|param|z": "Z座標"
}